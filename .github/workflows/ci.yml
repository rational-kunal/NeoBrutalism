name: "NeoBrutalism CI"

on: 
  push:
    branches: 
      - main
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'
  pull_request:
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'

concurrency: 
  group: ${{ github.ref_name }}
  cancel-in-progress: true

# Refer https://github.com/Alamofire/Alamofire/blob/master/.github/workflows/ci.yml
jobs:
  iOS:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runsOn }}
    env:
      DEVELOPER_DIR: "/Applications/${{ matrix.xcode }}.app/Contents/Developer"
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        include:
          # - destination: "OS=18.1,name=iPhone 16"
          #   name: "iOS 18.1"
          #   testPlan: "iOS"
          #   xcode: "Xcode_16.1"
          #   runsOn: macOS-15
          - destination: "OS=18.0,name=iPhone 16"
            name: "iOS 18.0"
            testPlan: "iOS"
            xcode: "Xcode_16.0"
            runsOn: macOS-15
    steps:
      - uses: actions/checkout@v4
      
#      - name: Boot simulator
#        run: |
#          xcrun simctl shutdown all
#          xcrun simctl boot "iPhone 16"
#          xcrun simctl list
      
      - name: Disable macro validation
        run: |
          defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidatation -bool YES
          defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      
      - name: Run tests and save result bundle
        run: |
          mkdir -p test_output
          set -o pipefail
          env NSUnbufferedIO=YES xcodebuild \
            -scheme "NeoBrutalism" \
            -destination "${{ matrix.destination }}" \
            -resultBundlePath "test_output/${{ matrix.name }}.xcresult" \
            -enableCodeCoverage YES \
            -parallel-testing-enabled YES \
            CODE_SIGNING_ALLOWED=NO \
            clean test > build.log || true

      - name: Upload xcresult bundle
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-xcresult
          path: test_output/${{ matrix.name }}.xcresult

      - name: Upload raw build log
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}-build-log
          path: build.log

      - name: Find and upload snapshot images
        run: |
          mkdir -p snapshot_artifacts
          ls ~/work/NeoBrutalism/NeoBrutalism/Tests/NeoBrutalismTests/__Snapshots__
          find ~/work/NeoBrutalism/NeoBrutalism/Tests/NeoBrutalismTests/__Snapshots__ -type f -name "*.png" -exec cp {} snapshot_artifacts/ \;
        shell: bash

      - name: Upload snapshot artifacts
        uses: actions/upload-artifact@v4
        with:
          name: snapshot-images-${{ matrix.name }}
          path: snapshot_artifacts

      - name: Archive Logs on Failure
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-logs
          path: |
            ~/Library/Logs/DiagnosticReports
            build.log
