name: "NeoBrutalism CI"

on: 
  push:
    branches: 
      - main
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'
  pull_request:
    paths:
      - 'Sources/**'
      - 'Tests/**'
      - '.github/workflows/**'
      - 'Package.swift'

concurrency: 
  group: ${{ github.ref_name }}
  cancel-in-progress: true

# Refer https://github.com/Alamofire/Alamofire/blob/master/.github/workflows/ci.yml
jobs:
  iOS:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.runsOn }}
    env:
      DEVELOPER_DIR: "/Applications/${{ matrix.xcode }}.app/Contents/Developer"
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - destination: "OS=18.1,name=iPhone 16"
            name: "iOS 18.1"
            testPlan: "iOS"
            xcode: "Xcode_16.1"
            runsOn: macOS-15
          - destination: "OS=18.0,name=iPhone 16 Pro"
            name: "iOS 18.0"
            testPlan: "iOS"
            xcode: "Xcode_16.0"
            runsOn: macOS-15
    steps:
      - uses: actions/checkout@v4
      - name: Disable macro validation
        run: |
          defaults write com.apple.dt.Xcode IDESkipPackagePluginFingerprintValidatation -bool YES
          defaults write com.apple.dt.Xcode IDESkipMacroFingerprintValidation -bool YES
      - name: ${{ matrix.name }}
        run: set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "NeoBrutalism" -destination "${{ matrix.destination }}" clean test 2>&1 | xcbeautify --renderer github-actions
    
      - name: Save xcodebuild output
        run: |
          set -o pipefail && env NSUnbufferedIO=YES xcodebuild -scheme "NeoBrutalism" \
          -destination "${{ matrix.destination }}" clean test > build.log 2>&1

      - name: Upload build.log
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-log
          path: build.log

      - name: Archive Logs on Failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: xcodebuild-logs
          path: |
            ~/Library/Logs/DiagnosticReports
            build.log
